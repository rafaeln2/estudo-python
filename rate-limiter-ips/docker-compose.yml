version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres-rl
    environment:
      POSTGRES_DB: db-rl
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5400:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
  app:  
    build:
      context: ./
      dockerfile: dockerfile
    container_name: app-python-rate-limiter
    ports:
      - "5000:80" 
    environment:
      DATABASE_URL: postgresql://postgres:1234@db:5432/meubanco
      DEBUG: "false"
      LOG_FILE: /app/logs/app.log
      PYTHONUNBUFFERED: "1"
    tty: true
    stdin_open: true
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started

    networks:
      - app-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-rate-limiter
    ports:
      - "5672:5672"     # Porta padrão para aplicações
      - "15672:15672"   # Interface web de gerenciamento
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    container_name: redis-rate-limiter
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  app-network:
    driver: bridge
  